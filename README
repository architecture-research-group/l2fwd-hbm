DPDK is a set of libraries and drivers for fast packet processing.
It supports many processor architectures and both FreeBSD and Linux.

The DPDK uses the Open Source BSD-3-Clause license for the core libraries
and drivers. The kernel components are GPL-2.0 licensed.

Please check the doc directory for release notes,
API documentation, and sample application information.

For questions and usage discussions, subscribe to: users@dpdk.org
Report bugs and issues to the development mailing list: dev@dpdk.org

```
(base) n869p538@emerald:examples$ pwd
/home/n869p538/mlnx_l2fwd_testing/dpdk/build/examples
(base) n869p538@emerald:examples$ sudo ./dpdk-l2fwd -l 0-3 -n 4 -- -q 1 -p 1 –P

(base) n869p538@emerald:build$ pwd
/home/n869p538/mlnx_l2fwd_testing/dpdk/build
(base) n869p538@emerald:build$ sudo ./examples/dpdk-hbm-fwd -l 1 -n 4
```
```

To run with PCM use : 
sudo <pcm-memory-loc> 1 -nc -csv=pcm.csv -- ./build/examples/dpdk-l2fwd -l 0-3 -n 4 -- -q 1 -p 1 –P
swap <pcm-memory-loc> with location of pcm-memory tool e.g /home/j152s822/Documents/pcm/build/bin/pcm-memory
After that, to plot, run:
python plot.py <memory_type> <socket_choice> <metric_choice>
<memory_type> should be "h" for HBM or "m" for Mem
<socket_choice> should be "0" (For socket 0 and HBM) or "1" (For socket 1) 
<metric_choice> Should be "r" (Read bandwidth), "w" (Write Bandwidth), "t" (Total), or "rw"(Read and write on same graph).
e.g 'python plot.py h 0 rw' for HBM Read and Write


To restrict cache ways: (./pqos_1way.sh)
```
sudo pqos -e "llc:0=0x0001"
sudo pqos -a "llc:0=0-10"

#reset after testing
sudo pqos -R
```

To corun antagonist and l2fwd:
```
./pqos_1way.sh

#shell 1
cd antagonist
./run.sh

# shell 2
./start_l2fwd.sh
```
